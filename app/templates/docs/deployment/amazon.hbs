<Crumb>
	<Crumb::Item @link="docs">Documentation</Crumb::Item>
	<Crumb::Item @link="docs.deployment">Deployment</Crumb::Item>
	<Crumb::Item @link="docs.deployment.amazon">Deploy on Amazon Web Services</Crumb::Item>
</Crumb>

<Layout::Text text-l text-f>
	<h2><Devicon @size="50" @type="amazon" /> Deploy on Amazon EKS</h2>
	<h3>What is Amazon EKS?</h3>
	<p>
		<Link @link="https://docs.aws.amazon.com/eks/">Amazon Elastic Kubernetes Service (Amazon EKS)</Link> is a managed service that eliminates the need to install, operate, and maintain your own Kubernetes control plane on Amazon Web Services (AWS).
		<Layout::Gap tiny />
	This deployment guide covers setting up a highly available SurrealDB cluster backed by <Link @link="https://tikv.org/">TiKV</Link> on Amazon EKS.
	</p>

	<h3>Requirements</h3>
	<p>For this guide you'll need: </p>
		<ul>
			<li> An account on <Link @link="https://aws.amazon.com/">Amazon Web Services (AWS)</Link> and also the necessary <Link @link="https://aws.amazon.com/iam/">Amazon Identity and Access Management (Amazon IAM) </Link> permissions to programmatically create resources in your account.</li>
			<li> <Link @link="https://kubernetes.io/docs/tasks/tools/install-kubectl/"><code>kubectl</code></Link> To manage the Kubernetes cluster.</li>
			<li> AWS CLI <Link @link="https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html">installed</Link> and <Link @link="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html">configured</Link> with your user's credentails</li>
			<li> <Link @link="https://eksctl.io/installation/"><code>eksctl</code></Link> installed</li>
		</ul>

		<blockquote Red text="Cost Considerations">
			Provisioning the environment in your AWS account will create resources and there will be cost associated with them. The cleanup section provides a guide to remove them, preventing further charges.
		</blockquote>

		<blockquote Red text="Note">
			This guide was tested in <code>eu-west-1</code> (Ireland region) and it follows TiKV best practices for scalability and high availability. It will provision up to 12 <Link @link="https://aws.amazon.com/ec2/">Amazon Elastic Compute Cloud (Amazon EC2)</Link> instances, several <Link @link="https://aws.amazon.com/ebs/">Amazon Elastic Block Storage (Amazon EBS)</Link> drives, and up to three <Link @link="https://aws.amazon.com/elasticloadbalancing/">Amazon Elastic Loadbalancers (Amazon ELB)</Link>.
			The forecasted cost to run this guide is of <em>$5 USD per hour</em>.
		</blockquote>

	<h3>Building an EKS Cluster</h3>
	<p>
		This section outlines how to build a cluster by using the <Link @link="https://eksctl.io/"><code>eksctl</code></Link> tool. The following is the configuration that will be used to build the cluster:
	</p>
	<Code @name="docs/deployment/amazon/surrealdb-cluster.yml" text="surreadb cluster config" />
	<p>
		Based on this configuration eksctl will:
		<ul>
			<li>Create a <Link @link="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">VPC</Link> across three availability zones</li>
			<li>Create an EKS cluster</li>
			<li>Create an <Link @link="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_oidc.html">IAM OIDC</Link> provider</li>
			<li>Create the necessary node groups for TiKV according to <Link @link="https://docs.pingcap.com/tidb-in-kubernetes/stable/deploy-on-aws-eks">best practices</Link></li>
			<li>Configure the <Link @link="https://docs.aws.amazon.com/eks/latest/userguide/managing-vpc-cni.html">VPC CNI addon</Link> to manage networking</li>
			<li>Configure the <Link @link="https://docs.aws.amazon.com/eks/latest/userguide/ebs-csi.html">EBS addon</Link> to manage storage volumes</li>
		</ul>
		<br />
		Save the above configuration in a file named <code>surrealdb-cluster.yml</code> and apply the configuration file like so:
		<Layout::Gap tiny />
		<Code @name="docs/deployment/amazon/01-deploy-cluster.sh" text="deploy eks cluster"/>
		<br />
		<blockquote Yellow text="Note">
			The deployment of the cluster should take about 30 minutes.
		</blockquote>
	</p>

	<h3>Deploy TiKV</h3>
	<p>The following instructions will install <code>TiKV</code> operators in your EKS cluster.</p>
	<Code @name="docs/deployment/amazon/02-tikv-ops.sh" text="deploy TIKV Operator" />

	<h3>Create TiKV Cluster</h3>
	<p>The following instructions will create a <code>TiKV</code> cluster.</p>
	<Code @name="docs/deployment/amazon/03-create-tikv-cluster.sh" text="create TIKV Cluster" />

	<h3>Install ALB Controller</h3>
	<p>The following instructions will install the AWS Load Balancer Controller.</p>
	<p>The AWS Load Balancer Controller provisions and manages the necessary AWS resources when Kubernetes creates an <code>Ingress</code> or a <code>LoadBalancer</code></p>
    <p>
        Formerly known as AWS ALB Ingress Controller, it's an open-source project on <Link @link="https://github.com/kubernetes-sigs/aws-load-balancer-controller">GitHub</Link>.
    </p>
	<Code @name="docs/deployment/amazon/04-install-alb-controller.sh" text="install alb controller" />

	<h3>Install SurrealDB</h3>
	<p>The following script will install SurrealDB on your EKS cluster backed by TiKV with a public endpoint exposed via an Application Load Balancer (ALB)</p>
	<Code @name="docs/deployment/amazon/05-install-surreal.sh" text="install surrealdb" />

	<h3>Test your SurrealDB Installation</h3>
	<p>You can get the endpoint to use with your surrealdb client as follows</p>
	<Code @name="docs/deployment/amazon/06-get-endpoint.sh" text="Test installation" />
	<p>Test your connection with the following command</p>
	<Code @name="docs/deployment/amazon/07-connect-to-surrealdb.sh" text="connection test" />

	<h3>Cleanup</h3>
	<p>
		You can clean up the cluster with the following commands.<br />
		<Code @name="docs/deployment/amazon/99-cleanup.sh" text="cleanup" />
	</p>
	<p> The default cleanup behaviour is to preserve resources such as EBS volumes that were previously attached to your cluster. If this is not what you want, and in order to prevent you from incurring
		in additional charges related to the usage of these block storage devices, <Link @link="https://eu-west-1.console.aws.amazon.com/ec2/home?region=eu-west-1#Volumes">navigate to the AWS console</Link> and manually delete all volumes that were attached to your cluster, as shown in figure.
	</p>

	<img src="/static/img/docs/deployment/amazon/delete-volumes.png" w-100 />

    <Layout::Gap tiny />
	<p>To contribute to this documentation, <Link @link={{github}}>edit this file on GitHub</Link>.</p>

</Layout::Text>

<Layout::Gap small />
